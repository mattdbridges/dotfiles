#!/bin/zsh
# vim: filetype=zsh

set -e

# Don't need these right now, but maybe later on
# readonly PROGNAME=`basename $0`
# readonly PROGDIR=`/usr/bin/readlink -n $(dirname $0)`
readonly ARGS="$@"

readonly GREEN='\033[0;32m'
readonly BLUE='\033[0;34m'
readonly BGREEN='\033[1;32m'
readonly BCYAN='\033[1;36m'
readonly BWHITE='\033[1;37m'
readonly NC='\033[0m'

say() {
  local statement=$@

  echo -e "${BCYAN}==> ${BWHITE}$statement${NC}"
}

announce() {
  local statement=$@
  echo -e "${BCYAN}==>${NC}${GREEN} $statement${NC}"
}

say_done() {
  echo -e "${BCYAN}==>${NC}${BGREEN} Done!${NC}"
}

setup_dotfiles() {
  say "Setting up dotfiles"
  rm -rf $HOME/.rcrc
  ln -s $HOME/.dotfiles/rcrc ~/.rcrc
  rcup -v
  say_done
}

setup_zpresto() {
  if [ ! -e "$HOME/.zprezto" ]; then
    say "Installing Prezto..."
    git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto" &> /dev/null
    setopt EXTENDED_GLOB
    for rcfile in $(find ~/.zprezto/runcoms | grep -v README.md); do
      if [ ! -f "$HOME/.${rcfile:t}" ]; then
        ln -s "$rcfile" "${ZDOTDIR:-$HOME}/.${rcfile:t}"
      fi
    done
    say_done
  else
    say "Updating Prezto..."
    cd "${ZDOTDIR:-$HOME}/.zprezto" &> /dev/null
    git pull >/dev/null 2>&1
    git submodule update >/dev/null 2>&1
    cd - &> /dev/null
    say_done
  fi
}

setup_minpac_plugins() {
  say "Installing Vim plugins"
  nvim +PackUpdate +q && echo
  say_done
}


main() {
  setup_dotfiles && echo
  setup_zpresto && echo
  setup_minpac_plugins && echo

  announce "Dotfiles setup!"
}

main $ARGS
