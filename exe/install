#!/usr/bin/env zsh
# vim: filetype=zsh

set -e

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `install` has finished
while true; do sudo -n true; sleep 30; kill -0 "$$" || exit; done 2>/dev/null &

# Don't need these right now, but maybe later on
# readonly PROGNAME=`basename $0`
# readonly PROGDIR=`/usr/bin/readlink -n $(dirname $0)`
readonly ARGS="$@"

readonly GREEN='\033[0;32m'
readonly BLUE='\033[0;34m'
readonly BGREEN='\033[1;32m'
readonly BCYAN='\033[1;36m'
readonly NC='\033[0m'

say() {
  local statement=$@

  echo -e "${BCYAN}==> ${NC}$statement${NC}"
}

announce() {
  local statement=$@
  echo -e "${BCYAN}==>${NC}${GREEN} $statement${NC}"
}

say_done() {
  echo -e "${BCYAN}==>${NC}${BGREEN} Done!${NC}"
}

install_setup_homebrew() {
  if [ ! -x "$(command -v brew)" ]; then
    say "Installing Homebrew"
    ruby <(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)
    brew install git &> /dev/null
    say_done
  else
    announce "Homebrew already installed"
  fi
}

clone_repo_to_dotfiles() {
  local dir="$HOME/.dotfiles"

  if [ ! -d $dir ]; then
    say "Cloning dotfiles repository"
    git clone https://github.com/mdespuits/dotfiles.git $HOME/.dotfiles
    say_done
  else
    say "Updating dotfiles"

    pushd "$HOME/.dotfiles" &> /dev/null
    git pull --rebase --autostash

    popd &> /dev/null
    say_done
  fi
}

main() {
  install_setup_homebrew && echo
  clone_repo_to_dotfiles && echo

  . $HOME/.dotfiles/exe/deps
  . $HOME/.dotfiles/exe/setup
  . $HOME/.dotfiles/exe/macos

  announce "Dotfiles setup!"
}

main $ARGS
